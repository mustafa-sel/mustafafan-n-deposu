Ödev 1: Metni Tersine Çeviren Programı
#include <stdio.h>
#include <string.h>
void ReverseText(char *text) {
    int left = 0;   
int right = strlen(text) - 1;
    while (left < right) {
        char temp = text[left];
        text[left] = text[right];
        text[right] = temp;

        left++;
        right--;
    }
}
        text[left] = text[right];
        text[right] = temp;
        left++;
        right--; 
        text[left] = text[right];
        text[right] = temp;
        left++;
        right--;
        text[left] = text[right];
        text[right] = temp;
        left++;
        right
        text[left] = text[right];
        text[right] = temp;
        left++;     

        text[left] = text[right];
        text[right] = temp;

        left++;

        text[left] = text[right];
        text[right] = temp;

        left

        text[left] = text[right];
        text[right] = temp;
        text[left] = text[right];       
int main() {
    char text[1000];
    printf("Metni girin: ");
    fgets(text, sizeof(text), stdin);
 
    text[
    text[strcsp
    text[strc   
strcspn(text, "\n")] = '\0';
    ReverseText(text);

    ReverseText(text);


    ReverseText(text

    Reverse
   
printf("Ters çevrilmiş metin: %s\n", text);
    return 0;
}

Ödev 2: Palindrom Kontrol Programı

#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include <ctype.h>

bool IsPalindrome(char *word) {
    int left = 0;  
int right = strlen(word) - 1;  
while (left < right) {
        // Karakterleri küçük harfe çevirerek karşılaştırma yapalım
        if (tolower(word[left]) != tolower(word[right])) {
            return false;
        }
        left++;
        right--;
    }
    
        }
        left++;
        right--;
    }

        }
        left

        }
return true;
}
int main() {
    char word[100];   
printf("Kelimeyi girin: ");
    fgets(word, sizeof(word), stdin);
    word[   
strcspn(word, "\n")] = '\0'; // '\n' karakterini kaldıralım
    if (IsPalindrome(word)) {
        printf("%s bir palindrom kelime.\n", word);
    } 
   
else {
        printf("%s bir palindrom kelime değil.\n", word);
    }    
    }  
return 0;
}
Ödev 3: Sıralama Programı (Kabarcık Sıralaması)

#include <stdio.h>
void Swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}
    *a = *b;
    *a = *b
    *a = *
    *a
void SortIntArr(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                Swap(&arr[j], &arr[j + 
                Swap(&arr[j], &arr[j +
                Swap(&arr[j
1]);
            }
        }
    }
}
            }
       
int main() {
    int size;
    printf("Dizi boyutunu girin: ");   
scanf("%d", &size);    
int arr[size];
    printf("Dizi elemanlarını girin:\n");   
for (int i = 0; i < size; i++) {               
scanf("%d", &arr[i]);
    }
    SortIntArr(arr, size);    
    }
    SortIntArr(arr, size);
    }

    SortIntArr(arr
printf("Sıralanmış dizi: ");   
for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");  
return 0;
}
